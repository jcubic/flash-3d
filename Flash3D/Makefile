###############################################################################
# Makefile automatically generated by Code::Blocks IDE                        #
###############################################################################

# Project:          Flash 3D
# Project filename: D:\programing\Flash3D\Flash3D\Flash3D.cbp
# Compiler used:    GNU GCC Compiler

### Variables used in this Makefile
default_CC=mingw32-gcc.exe
default_CPP=mingw32-g++.exe
default_LD=mingw32-g++.exe
default_LIB=ar.exe
default_RESCOMP=windres.exe

### Compiler/linker options
default_GLOBAL_CFLAGS= -O -pg
default_PROJECT_CFLAGS= -march=pentium3 -O3 -O2 -O1 -O -pedantic -Wall
default_GLOBAL_LDFLAGS= -pg -lgmon
default_PROJECT_LDFLAGS= -s
default_GLOBAL_INCS= -IC:/Program\ Files/CodeBlocks/include -IC:/Dev-Cpp/Packages/include -IC:/Program\ Files/GLUT
default_PROJECT_INCS= -Iheaders
default_GLOBAL_LIBDIRS= -LC:/Program\ Files/CodeBlocks/lib -LC:/Dev-Cpp/Packages/lib
default_PROJECT_LIBDIRS=
default_GLOBAL_LIBS=
default_PROJECT_LIBS= libs/libming.a

### Targets compiler flags
default_CFLAGS= $(default_PROJECT_CFLAGS) -march=pentium3 -O3 -O2 -O1 -O  $(default_GLOBAL_CFLAGS)

### Targets linker flags
default_LDFLAGS= $(default_PROJECT_LDFLAGS) -s $(default_GLOBAL_LDFLAGS)

### Targets include directories
default_INCS= $(default_PROJECT_INCS) $(default_GLOBAL_INCS)

### Targets library directories
default_LIBDIRS= $(default_PROJECT_LIBDIRS) $(default_GLOBAL_LIBDIRS)

### Targets libraries
default_LIBS= $(default_PROJECT_LIBS) $(default_GLOBAL_LIBS)

###############################################################################
#         You shouldn't need to modify anything beyond this point             #
###############################################################################

### Resources used in this Makefile
default_RESOURCE=

### Objects used in this Makefile
default_OBJS=.objs/sources/main.o .objs/sources/matrix.o .objs/sources/object.o .objs/sources/scene.o .objs/sources/tools.o 
default_LINKOBJS=$(default_OBJS)
default_DEPS=.deps/sources/main.d .deps/sources/matrix.d .deps/sources/object.d .deps/sources/scene.d .deps/sources/tools.d 

### The targets of this project
default_BIN=../Flash3D.exe

.PHONY: all all-before all-custom all-after clean clean-custom distclean distclean-custom depend_default default-before default-after 

all: all-before default all-after


dist:
	@zip Flash3D.cbp.zip Flash3D.cbp Makefile headers\ming.h headers\mingpp.h headers\sd3d.h sources\main.cpp sources\matrix.cpp sources\object.cpp sources\scene.cpp sources\tools.cpp 

clean_default:
	@echo Cleaning target "default"...
	@$(RM) $(default_BIN) $(default_OBJS) $(default_RESOURCE) 

distclean_default:
	@echo Dist-cleaning target "default"...
	@$(RM) $(default_BIN) $(default_OBJS) $(default_DEPS) $(default_RESOURCE) 

clean: clean_default 

distclean: distclean_default 

depend_default_DIRS:
	-@if not exist ".deps\." mkdir ".deps"
	-@if not exist ".deps\headers\." mkdir ".deps\headers"
	-@if not exist ".deps\sources\." mkdir ".deps\sources"

depend_default: depend_default_DIRS $(default_DEPS)

depend: depend_default

default_DIRS:
	-@if not exist ".objs\." mkdir ".objs"
	-@if not exist ".objs\headers\." mkdir ".objs\headers"
	-@if not exist ".objs\sources\." mkdir ".objs\sources"
	-@if not exist "..\." mkdir ".."

default: depend_default default_DIRS default-before $(default_BIN) default-after

$(default_BIN): $(default_LINKOBJS) $(default_RESOURCE)
	@echo Linking executable "..\Flash3D.exe"...
	@$(default_LD) $(default_LIBDIRS) -o $(default_BIN) $(default_LINKOBJS) $(default_RESOURCE) $(default_LDFLAGS) $(default_LIBS) -mwindows


.deps/sources/main.d: sources/main.cpp
	@echo Calculating dependencies for "sources\main.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/sources/main.d -MT .objs/sources/main.o $(default_INCS) sources/main.cpp

.objs/sources/main.o: .deps/sources/main.d
	@echo Compiling "sources\main.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c sources/main.cpp -o .objs/sources/main.o

.deps/sources/matrix.d: sources/matrix.cpp
	@echo Calculating dependencies for "sources\matrix.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/sources/matrix.d -MT .objs/sources/matrix.o $(default_INCS) sources/matrix.cpp

.objs/sources/matrix.o: .deps/sources/matrix.d
	@echo Compiling "sources\matrix.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c sources/matrix.cpp -o .objs/sources/matrix.o

.deps/sources/object.d: sources/object.cpp
	@echo Calculating dependencies for "sources\object.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/sources/object.d -MT .objs/sources/object.o $(default_INCS) sources/object.cpp

.objs/sources/object.o: .deps/sources/object.d
	@echo Compiling "sources\object.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c sources/object.cpp -o .objs/sources/object.o

.deps/sources/scene.d: sources/scene.cpp
	@echo Calculating dependencies for "sources\scene.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/sources/scene.d -MT .objs/sources/scene.o $(default_INCS) sources/scene.cpp

.objs/sources/scene.o: .deps/sources/scene.d
	@echo Compiling "sources\scene.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c sources/scene.cpp -o .objs/sources/scene.o

.deps/sources/tools.d: sources/tools.cpp
	@echo Calculating dependencies for "sources\tools.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/sources/tools.d -MT .objs/sources/tools.o $(default_INCS) sources/tools.cpp

.objs/sources/tools.o: .deps/sources/tools.d
	@echo Compiling "sources\tools.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c sources/tools.cpp -o .objs/sources/tools.o



